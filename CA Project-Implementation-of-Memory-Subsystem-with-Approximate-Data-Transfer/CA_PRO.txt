Project 2: Implementation of Memory Subsystem with Approximate Data Transfer

Project Summary:
Whenever there is a cache miss in L1 data (L1D) cache, data is fetched from the next memory
layer. However, as the next memory layer is not close to the core, it takes a significant amount of energy in order to
bring data from next memory layer to the L1D cache. In this project, you will implement a memory subsystem
consisting of an L1D cache and a main memory. Whenever there is a miss in L1D cache, an error tolerance
information will be sent along with the data request that aims to reduce power consumption. This project will be
implemented using the HDL language of your choice (Verilog, VHDL, SystemVerilog), though we will be able to help
you only in Verilog.


Project Description:
In this project, we have a 2 KB, 4 way set associative L1D cache. Each cache line is of 32 bytes each and processor
word size is of 4 bytes. Note that this size excludes the tag information present in each cache block. Just as in a
typical cache, just passing the address should give a word size value. During the evaluation, a 32 bit address will be
given and the output should be a word (4 byte) value.
Whenever there is a cache miss in L1D cache, the memory request is sent to a 8 KB main memory, with each
location of 4 bytes each. Note that in case of cache miss, the cache line is fetched and not just the word missed. As
each cache line is of 32 bytes and processor size is of 4 bytes, the transfer happens as a stream of eight 4-byte
numbers. Make sure that the first data is multiple of 8, else wrong data may be passed as output. As the main
memory may not be available, a simple protocol consisting of four signals- CLK, VALID, READY and DATA. A
transfer takes place when both VALID and READY are asserted. The summary of each signal is given below:



Signal		Source		Description

CLK 	Clock Source 	Global clock signals. All signals are sampled at the rising edge of the clock.

VALID 	Master 	VALID indicates that the master is driving a valid transfer. For both load and store operation, asserted by L1D cache to initiate transfer.For load operation, once READY signal is received, it sends theaddress. Deasserted when the data is received.For store operation,once READY signal is received, it sends the address followed by the data. Deasserted when the data is sent.

READY 	Slave 	READY indicates that the slave can accept a transfer in the current cycle. For both load and store operation, asserted by the main memory in next clock cycle after receiving the VALID request. For load operation,it sends the data to the L1D cache after receiving the address. Deasserted by the main memory after last data is sent. For store operation, it stores the data in the buffer and then modifies the main memory. Deasserted by the main memory after last data is received.

DATA[31:0] Master/Slave DATA is the primary data passing across the interface. The L1D cache sends(recieves) the address(data) to (from) the main memory using this bus.



The data transfer in this case happens as a sequence of eight-four byte numbers


